{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\Documents\\\\Projetos\\\\sistema-os\\\\frontend\\\\src\\\\pages\\\\EditarClientes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport FormularioCliente from '../components/FormularioCliente'; // Componente de formulário reutilizável\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditarCliente() {\n  _s();\n  const {\n    id\n  } = useParams(); // Captura o ID do cliente da URL\n  const navigate = useNavigate();\n  const [cliente, setCliente] = useState(null);\n\n  // Carrega os dados do cliente para edição\n  useEffect(() => {\n    const carregarCliente = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/clientes/${id}`);\n        if (!response.ok) throw new Error('Erro ao carregar cliente');\n        const data = await response.json();\n        setCliente(data);\n      } catch (error) {\n        console.error('Erro:', error);\n        alert('Erro ao carregar cliente');\n      }\n    };\n    carregarCliente();\n  }, [id]);\n\n  // Atualiza os dados do cliente no backend\n  const handleEditarCliente = async clienteAtualizado => {\n    try {\n      const response = await fetch(`http://localhost:3000/clientes/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(clienteAtualizado)\n      });\n      if (!response.ok) throw new Error('Erro ao atualizar cliente');\n      alert('Cliente atualizado com sucesso!');\n      navigate(`/clientes/${id}`); // Redireciona para a página de detalhes\n    } catch (error) {\n      console.error('Erro:', error);\n      alert('Erro ao atualizar cliente');\n    }\n  };\n\n  // Exibe um loading enquanto os dados são carregados\n  if (!cliente) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Carregando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Editar Cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormularioCliente, {\n      cliente: cliente,\n      onSubmit: handleEditarCliente\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(`/clientes/${id}`),\n      children: \"Cancelar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(EditarCliente, \"AF4RzYD+tJEIYcRMMlW5SK452bo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditarCliente;\nexport default EditarCliente;\nvar _c;\n$RefreshReg$(_c, \"EditarCliente\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","FormularioCliente","jsxDEV","_jsxDEV","EditarCliente","_s","id","navigate","cliente","setCliente","carregarCliente","response","fetch","ok","Error","data","json","error","console","alert","handleEditarCliente","clienteAtualizado","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onClick","_c","$RefreshReg$"],"sources":["C:/Users/felip/Documents/Projetos/sistema-os/frontend/src/pages/EditarClientes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport FormularioCliente from '../components/FormularioCliente'; // Componente de formulário reutilizável\r\n\r\nfunction EditarCliente() {\r\n  const { id } = useParams(); // Captura o ID do cliente da URL\r\n  const navigate = useNavigate();\r\n  const [cliente, setCliente] = useState(null);\r\n\r\n  // Carrega os dados do cliente para edição\r\n  useEffect(() => {\r\n    const carregarCliente = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/clientes/${id}`);\r\n        if (!response.ok) throw new Error('Erro ao carregar cliente');\r\n        const data = await response.json();\r\n        setCliente(data);\r\n      } catch (error) {\r\n        console.error('Erro:', error);\r\n        alert('Erro ao carregar cliente');\r\n      }\r\n    };\r\n\r\n    carregarCliente();\r\n  }, [id]);\r\n\r\n  // Atualiza os dados do cliente no backend\r\n  const handleEditarCliente = async (clienteAtualizado) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/clientes/${id}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(clienteAtualizado),\r\n      });\r\n      if (!response.ok) throw new Error('Erro ao atualizar cliente');\r\n      alert('Cliente atualizado com sucesso!');\r\n      navigate(`/clientes/${id}`); // Redireciona para a página de detalhes\r\n    } catch (error) {\r\n      console.error('Erro:', error);\r\n      alert('Erro ao atualizar cliente');\r\n    }\r\n  };\r\n\r\n  // Exibe um loading enquanto os dados são carregados\r\n  if (!cliente) return <div>Carregando...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Editar Cliente</h1>\r\n      {/* Formulário para editar o cliente */}\r\n      <FormularioCliente cliente={cliente} onSubmit={handleEditarCliente} />\r\n      {/* Botão para cancelar e voltar para a página de detalhes */}\r\n      <button onClick={() => navigate(`/clientes/${id}`)}>Cancelar</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditarCliente;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,iBAAiB,MAAM,iCAAiC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjE,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkCN,EAAE,EAAE,CAAC;QACpE,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;QAC7D,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCP,UAAU,CAACM,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7BE,KAAK,CAAC,0BAA0B,CAAC;MACnC;IACF,CAAC;IAEDT,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACJ,EAAE,CAAC,CAAC;;EAER;EACA,MAAMc,mBAAmB,GAAG,MAAOC,iBAAiB,IAAK;IACvD,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkCN,EAAE,EAAE,EAAE;QACnEgB,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,iBAAiB;MACxC,CAAC,CAAC;MACF,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9DK,KAAK,CAAC,iCAAiC,CAAC;MACxCZ,QAAQ,CAAC,aAAaD,EAAE,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;MAC7BE,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF,CAAC;;EAED;EACA,IAAI,CAACX,OAAO,EAAE,oBAAOL,OAAA;IAAAwB,QAAA,EAAK;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE7C,oBACE5B,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEvB5B,OAAA,CAACF,iBAAiB;MAACO,OAAO,EAAEA,OAAQ;MAACwB,QAAQ,EAAEZ;IAAoB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEtE5B,OAAA;MAAQ8B,OAAO,EAAEA,CAAA,KAAM1B,QAAQ,CAAC,aAAaD,EAAE,EAAE,CAAE;MAAAqB,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEV;AAAC1B,EAAA,CAnDQD,aAAa;EAAA,QACLL,SAAS,EACPC,WAAW;AAAA;AAAAkC,EAAA,GAFrB9B,aAAa;AAqDtB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}