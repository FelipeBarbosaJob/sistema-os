{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\Documents\\\\Projetos\\\\sistema-os\\\\frontend\\\\src\\\\components\\\\CriarOrcamento.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CriarOrcamento() {\n  _s();\n  const navigate = useNavigate();\n\n  // Estados para o formulário de orçamento\n  const [clienteId, setClienteId] = useState('');\n  const [distancia, setDistancia] = useState('');\n  const [quantidadeEletrocalha, setQuantidadeEletrocalha] = useState('');\n  const [quantidadeDutoCanaduto, setQuantidadeDutoCanaduto] = useState('');\n  const [quantidadeEletrodutoPVC, setQuantidadeEletrodutoPVC] = useState('');\n  const [desviosCanaduto, setDesviosCanaduto] = useState('');\n  const [desviosPVC, setDesviosPVC] = useState('');\n  const [conduletes, setConduletes] = useState('');\n  const [quantidadeCurvas, setQuantidadeCurvas] = useState('');\n  const [observacao, setObservacao] = useState('');\n  const [resultado, setResultado] = useState(''); // Estado para armazenar o resultado\n\n  // Função para calcular o resultado\n  const calcularResultado = () => {\n    const centro = parseFloat(distancia);\n    const eletrocalha = parseFloat(quantidadeEletrocalha);\n    const dutoCanaduto = parseFloat(quantidadeDutoCanaduto);\n    const eletrodutoPVC = parseFloat(quantidadeEletrodutoPVC);\n    const desviosC = parseInt(desviosCanaduto);\n    const desviosP = parseInt(desviosPVC);\n    const conduletesQ = parseInt(conduletes);\n    const curvas = parseInt(quantidadeCurvas);\n    const totalGeral = centro + eletrocalha + dutoCanaduto + eletrodutoPVC;\n    const margemSeguranca = Math.ceil(totalGeral * 1.1);\n    const eletrodutoRigido = Math.ceil(eletrodutoPVC * 1.1 / 3.0);\n    const luvas = desviosC * 2 + eletrodutoRigido;\n    const abracadeiras = desviosC * 3 + eletrodutoRigido * 3;\n    const quantidadeConduletes = conduletesQ + desviosP * 2;\n    const curvap = curvas + desviosP * 2;\n    const resultadoTexto = `\n      Resumo dos Materiais\n\n      Total Geral: ${totalGeral.toFixed(2)} m\n      Margem de Segurança: ${margemSeguranca.toFixed(2)} m\n      Eletroduto Rígido: ${eletrodutoRigido} varas\n      Duto Canaduto: ${dutoCanaduto.toFixed(2)} m\n      Luvas: ${luvas}\n      Abraçadeiras: ${abracadeiras}\n      Conduletes: ${quantidadeConduletes}\n      Curvas: ${curvap}\n      Observação: ${observacao}\n    `;\n    setResultado(resultadoTexto); // Atualiza o estado com o resultado\n    return resultadoTexto; // Retorna o resultado para ser salvo\n  };\n\n  // Função para salvar um orçamento\n  const handleSalvarOrcamento = async e => {\n    e.preventDefault();\n\n    // Calcula o resultado\n    const resultadoTexto = calcularResultado();\n    const orcamento = {\n      clienteId,\n      distancia: parseFloat(distancia),\n      quantidadeEletrocalha: parseFloat(quantidadeEletrocalha),\n      quantidadeDutoCanaduto: parseFloat(quantidadeDutoCanaduto),\n      quantidadeEletrodutoPVC: parseFloat(quantidadeEletrodutoPVC),\n      desviosCanaduto: parseInt(desviosCanaduto),\n      desviosPVC: parseInt(desviosPVC),\n      conduletes: parseInt(conduletes),\n      quantidadeCurvas: parseInt(quantidadeCurvas),\n      observacao,\n      resultado: resultadoTexto // Salva o resultado calculado\n    };\n    try {\n      const response = await fetch('http://localhost:3000/orcamentos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(orcamento)\n      });\n      if (!response.ok) throw new Error('Erro ao salvar orçamento');\n      alert('Orçamento criado com sucesso!');\n      navigate('/orcamentos'); // Redireciona para a lista de orçamentos\n    } catch (error) {\n      console.error('Erro:', error);\n      alert('Erro ao salvar orçamento');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Criar Or\\xE7amento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSalvarOrcamento,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"ID do Cliente:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: clienteId,\n          onChange: e => setClienteId(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Dist\\xE2ncia (m):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: distancia,\n          onChange: e => setDistancia(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Quantidade de Eletrocalha (m):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: quantidadeEletrocalha,\n          onChange: e => setQuantidadeEletrocalha(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Quantidade de Duto Canaduto (m):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: quantidadeDutoCanaduto,\n          onChange: e => setQuantidadeDutoCanaduto(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Quantidade de Eletroduto PVC (m):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: quantidadeEletrodutoPVC,\n          onChange: e => setQuantidadeEletrodutoPVC(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Desvios Canaduto:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: desviosCanaduto,\n          onChange: e => setDesviosCanaduto(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Desvios PVC:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: desviosPVC,\n          onChange: e => setDesviosPVC(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Conduletes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: conduletes,\n          onChange: e => setConduletes(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Quantidade de Curvas:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: quantidadeCurvas,\n          onChange: e => setQuantidadeCurvas(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Observa\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: observacao,\n          onChange: e => setObservacao(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Salvar Or\\xE7amento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), resultado && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Resultado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: resultado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(CriarOrcamento, \"q5LgXzB+7WW+NIgNcT+0TG/cf70=\", false, function () {\n  return [useNavigate];\n});\n_c = CriarOrcamento;\nexport default CriarOrcamento;\nvar _c;\n$RefreshReg$(_c, \"CriarOrcamento\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","CriarOrcamento","_s","navigate","clienteId","setClienteId","distancia","setDistancia","quantidadeEletrocalha","setQuantidadeEletrocalha","quantidadeDutoCanaduto","setQuantidadeDutoCanaduto","quantidadeEletrodutoPVC","setQuantidadeEletrodutoPVC","desviosCanaduto","setDesviosCanaduto","desviosPVC","setDesviosPVC","conduletes","setConduletes","quantidadeCurvas","setQuantidadeCurvas","observacao","setObservacao","resultado","setResultado","calcularResultado","centro","parseFloat","eletrocalha","dutoCanaduto","eletrodutoPVC","desviosC","parseInt","desviosP","conduletesQ","curvas","totalGeral","margemSeguranca","Math","ceil","eletrodutoRigido","luvas","abracadeiras","quantidadeConduletes","curvap","resultadoTexto","toFixed","handleSalvarOrcamento","e","preventDefault","orcamento","response","fetch","method","headers","body","JSON","stringify","ok","Error","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/felip/Documents/Projetos/sistema-os/frontend/src/components/CriarOrcamento.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction CriarOrcamento() {\r\n  const navigate = useNavigate();\r\n\r\n  // Estados para o formulário de orçamento\r\n  const [clienteId, setClienteId] = useState('');\r\n  const [distancia, setDistancia] = useState('');\r\n  const [quantidadeEletrocalha, setQuantidadeEletrocalha] = useState('');\r\n  const [quantidadeDutoCanaduto, setQuantidadeDutoCanaduto] = useState('');\r\n  const [quantidadeEletrodutoPVC, setQuantidadeEletrodutoPVC] = useState('');\r\n  const [desviosCanaduto, setDesviosCanaduto] = useState('');\r\n  const [desviosPVC, setDesviosPVC] = useState('');\r\n  const [conduletes, setConduletes] = useState('');\r\n  const [quantidadeCurvas, setQuantidadeCurvas] = useState('');\r\n  const [observacao, setObservacao] = useState('');\r\n  const [resultado, setResultado] = useState(''); // Estado para armazenar o resultado\r\n\r\n  // Função para calcular o resultado\r\n  const calcularResultado = () => {\r\n    const centro = parseFloat(distancia);\r\n    const eletrocalha = parseFloat(quantidadeEletrocalha);\r\n    const dutoCanaduto = parseFloat(quantidadeDutoCanaduto);\r\n    const eletrodutoPVC = parseFloat(quantidadeEletrodutoPVC);\r\n    const desviosC = parseInt(desviosCanaduto);\r\n    const desviosP = parseInt(desviosPVC);\r\n    const conduletesQ = parseInt(conduletes);\r\n    const curvas = parseInt(quantidadeCurvas);\r\n\r\n    const totalGeral = centro + eletrocalha + dutoCanaduto + eletrodutoPVC;\r\n    const margemSeguranca = Math.ceil(totalGeral * 1.1);\r\n    const eletrodutoRigido = Math.ceil((eletrodutoPVC * 1.1) / 3.0);\r\n    const luvas = desviosC * 2 + eletrodutoRigido;\r\n    const abracadeiras = desviosC * 3 + eletrodutoRigido * 3;\r\n    const quantidadeConduletes = conduletesQ + desviosP * 2;\r\n    const curvap = curvas + desviosP * 2;\r\n\r\n    const resultadoTexto = `\r\n      Resumo dos Materiais\r\n\r\n      Total Geral: ${totalGeral.toFixed(2)} m\r\n      Margem de Segurança: ${margemSeguranca.toFixed(2)} m\r\n      Eletroduto Rígido: ${eletrodutoRigido} varas\r\n      Duto Canaduto: ${dutoCanaduto.toFixed(2)} m\r\n      Luvas: ${luvas}\r\n      Abraçadeiras: ${abracadeiras}\r\n      Conduletes: ${quantidadeConduletes}\r\n      Curvas: ${curvap}\r\n      Observação: ${observacao}\r\n    `;\r\n\r\n    setResultado(resultadoTexto); // Atualiza o estado com o resultado\r\n    return resultadoTexto; // Retorna o resultado para ser salvo\r\n  };\r\n\r\n  // Função para salvar um orçamento\r\n  const handleSalvarOrcamento = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Calcula o resultado\r\n    const resultadoTexto = calcularResultado();\r\n\r\n    const orcamento = {\r\n      clienteId,\r\n      distancia: parseFloat(distancia),\r\n      quantidadeEletrocalha: parseFloat(quantidadeEletrocalha),\r\n      quantidadeDutoCanaduto: parseFloat(quantidadeDutoCanaduto),\r\n      quantidadeEletrodutoPVC: parseFloat(quantidadeEletrodutoPVC),\r\n      desviosCanaduto: parseInt(desviosCanaduto),\r\n      desviosPVC: parseInt(desviosPVC),\r\n      conduletes: parseInt(conduletes),\r\n      quantidadeCurvas: parseInt(quantidadeCurvas),\r\n      observacao,\r\n      resultado: resultadoTexto // Salva o resultado calculado\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3000/orcamentos', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(orcamento)\r\n      });\r\n      if (!response.ok) throw new Error('Erro ao salvar orçamento');\r\n      alert('Orçamento criado com sucesso!');\r\n      navigate('/orcamentos'); // Redireciona para a lista de orçamentos\r\n    } catch (error) {\r\n      console.error('Erro:', error);\r\n      alert('Erro ao salvar orçamento');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Criar Orçamento</h1>\r\n      <form onSubmit={handleSalvarOrcamento}>\r\n        <div>\r\n          <label>ID do Cliente:</label>\r\n          <input type=\"text\" value={clienteId} onChange={(e) => setClienteId(e.target.value)} required />\r\n        </div>\r\n        <div>\r\n          <label>Distância (m):</label>\r\n          <input type=\"number\" value={distancia} onChange={(e) => setDistancia(e.target.value)} required />\r\n        </div>\r\n        <div>\r\n          <label>Quantidade de Eletrocalha (m):</label>\r\n          <input type=\"number\" value={quantidadeEletrocalha} onChange={(e) => setQuantidadeEletrocalha(e.target.value)} required />\r\n        </div>\r\n        <div>\r\n          <label>Quantidade de Duto Canaduto (m):</label>\r\n          <input type=\"number\" value={quantidadeDutoCanaduto} onChange={(e) => setQuantidadeDutoCanaduto(e.target.value)} required />\r\n        </div>\r\n        <div>\r\n          <label>Quantidade de Eletroduto PVC (m):</label>\r\n          <input type=\"number\" value={quantidadeEletrodutoPVC} onChange={(e) => setQuantidadeEletrodutoPVC(e.target.value)} required />\r\n        </div>\r\n        <div>\r\n          <label>Desvios Canaduto:</label>\r\n          <input type=\"number\" value={desviosCanaduto} onChange={(e) => setDesviosCanaduto(e.target.value)} required />\r\n        </div>\r\n        <div>\r\n          <label>Desvios PVC:</label>\r\n          <input type=\"number\" value={desviosPVC} onChange={(e) => setDesviosPVC(e.target.value)} required />\r\n        </div>\r\n        <div>\r\n          <label>Conduletes:</label>\r\n          <input type=\"number\" value={conduletes} onChange={(e) => setConduletes(e.target.value)} required />\r\n        </div>\r\n        <div>\r\n          <label>Quantidade de Curvas:</label>\r\n          <input type=\"number\" value={quantidadeCurvas} onChange={(e) => setQuantidadeCurvas(e.target.value)} required />\r\n        </div>\r\n        <div>\r\n          <label>Observação:</label>\r\n          <textarea value={observacao} onChange={(e) => setObservacao(e.target.value)} required />\r\n        </div>\r\n        <button type=\"submit\">Salvar Orçamento</button>\r\n      </form>\r\n\r\n      {/* Exibir o resultado */}\r\n      {resultado && (\r\n        <div>\r\n          <h2>Resultado</h2>\r\n          <pre>{resultado}</pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CriarOrcamento;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtE,MAAM,CAACa,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxE,MAAM,CAACe,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1E,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACuB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEhD;EACA,MAAM6B,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,MAAM,GAAGC,UAAU,CAACtB,SAAS,CAAC;IACpC,MAAMuB,WAAW,GAAGD,UAAU,CAACpB,qBAAqB,CAAC;IACrD,MAAMsB,YAAY,GAAGF,UAAU,CAAClB,sBAAsB,CAAC;IACvD,MAAMqB,aAAa,GAAGH,UAAU,CAAChB,uBAAuB,CAAC;IACzD,MAAMoB,QAAQ,GAAGC,QAAQ,CAACnB,eAAe,CAAC;IAC1C,MAAMoB,QAAQ,GAAGD,QAAQ,CAACjB,UAAU,CAAC;IACrC,MAAMmB,WAAW,GAAGF,QAAQ,CAACf,UAAU,CAAC;IACxC,MAAMkB,MAAM,GAAGH,QAAQ,CAACb,gBAAgB,CAAC;IAEzC,MAAMiB,UAAU,GAAGV,MAAM,GAAGE,WAAW,GAAGC,YAAY,GAAGC,aAAa;IACtE,MAAMO,eAAe,GAAGC,IAAI,CAACC,IAAI,CAACH,UAAU,GAAG,GAAG,CAAC;IACnD,MAAMI,gBAAgB,GAAGF,IAAI,CAACC,IAAI,CAAET,aAAa,GAAG,GAAG,GAAI,GAAG,CAAC;IAC/D,MAAMW,KAAK,GAAGV,QAAQ,GAAG,CAAC,GAAGS,gBAAgB;IAC7C,MAAME,YAAY,GAAGX,QAAQ,GAAG,CAAC,GAAGS,gBAAgB,GAAG,CAAC;IACxD,MAAMG,oBAAoB,GAAGT,WAAW,GAAGD,QAAQ,GAAG,CAAC;IACvD,MAAMW,MAAM,GAAGT,MAAM,GAAGF,QAAQ,GAAG,CAAC;IAEpC,MAAMY,cAAc,GAAG;AAC3B;AACA;AACA,qBAAqBT,UAAU,CAACU,OAAO,CAAC,CAAC,CAAC;AAC1C,6BAA6BT,eAAe,CAACS,OAAO,CAAC,CAAC,CAAC;AACvD,2BAA2BN,gBAAgB;AAC3C,uBAAuBX,YAAY,CAACiB,OAAO,CAAC,CAAC,CAAC;AAC9C,eAAeL,KAAK;AACpB,sBAAsBC,YAAY;AAClC,oBAAoBC,oBAAoB;AACxC,gBAAgBC,MAAM;AACtB,oBAAoBvB,UAAU;AAC9B,KAAK;IAEDG,YAAY,CAACqB,cAAc,CAAC,CAAC,CAAC;IAC9B,OAAOA,cAAc,CAAC,CAAC;EACzB,CAAC;;EAED;EACA,MAAME,qBAAqB,GAAG,MAAOC,CAAC,IAAK;IACzCA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMJ,cAAc,GAAGpB,iBAAiB,CAAC,CAAC;IAE1C,MAAMyB,SAAS,GAAG;MAChB/C,SAAS;MACTE,SAAS,EAAEsB,UAAU,CAACtB,SAAS,CAAC;MAChCE,qBAAqB,EAAEoB,UAAU,CAACpB,qBAAqB,CAAC;MACxDE,sBAAsB,EAAEkB,UAAU,CAAClB,sBAAsB,CAAC;MAC1DE,uBAAuB,EAAEgB,UAAU,CAAChB,uBAAuB,CAAC;MAC5DE,eAAe,EAAEmB,QAAQ,CAACnB,eAAe,CAAC;MAC1CE,UAAU,EAAEiB,QAAQ,CAACjB,UAAU,CAAC;MAChCE,UAAU,EAAEe,QAAQ,CAACf,UAAU,CAAC;MAChCE,gBAAgB,EAAEa,QAAQ,CAACb,gBAAgB,CAAC;MAC5CE,UAAU;MACVE,SAAS,EAAEsB,cAAc,CAAC;IAC5B,CAAC;IAED,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,SAAS;MAChC,CAAC,CAAC;MACF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7DC,KAAK,CAAC,+BAA+B,CAAC;MACtC1D,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,OAAO2D,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;MAC7BD,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF,CAAC;EAED,oBACE7D,OAAA;IAAAgE,QAAA,gBACEhE,OAAA;MAAAgE,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBpE,OAAA;MAAMqE,QAAQ,EAAErB,qBAAsB;MAAAgB,QAAA,gBACpChE,OAAA;QAAAgE,QAAA,gBACEhE,OAAA;UAAAgE,QAAA,EAAO;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7BpE,OAAA;UAAOsE,IAAI,EAAC,MAAM;UAACC,KAAK,EAAEnE,SAAU;UAACoE,QAAQ,EAAGvB,CAAC,IAAK5C,YAAY,CAAC4C,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;UAACG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5F,CAAC,eACNpE,OAAA;QAAAgE,QAAA,gBACEhE,OAAA;UAAAgE,QAAA,EAAO;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7BpE,OAAA;UAAOsE,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAEjE,SAAU;UAACkE,QAAQ,EAAGvB,CAAC,IAAK1C,YAAY,CAAC0C,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;UAACG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9F,CAAC,eACNpE,OAAA;QAAAgE,QAAA,gBACEhE,OAAA;UAAAgE,QAAA,EAAO;QAA8B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7CpE,OAAA;UAAOsE,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAE/D,qBAAsB;UAACgE,QAAQ,EAAGvB,CAAC,IAAKxC,wBAAwB,CAACwC,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;UAACG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtH,CAAC,eACNpE,OAAA;QAAAgE,QAAA,gBACEhE,OAAA;UAAAgE,QAAA,EAAO;QAAgC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/CpE,OAAA;UAAOsE,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAE7D,sBAAuB;UAAC8D,QAAQ,EAAGvB,CAAC,IAAKtC,yBAAyB,CAACsC,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;UAACG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxH,CAAC,eACNpE,OAAA;QAAAgE,QAAA,gBACEhE,OAAA;UAAAgE,QAAA,EAAO;QAAiC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChDpE,OAAA;UAAOsE,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAE3D,uBAAwB;UAAC4D,QAAQ,EAAGvB,CAAC,IAAKpC,0BAA0B,CAACoC,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;UAACG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1H,CAAC,eACNpE,OAAA;QAAAgE,QAAA,gBACEhE,OAAA;UAAAgE,QAAA,EAAO;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChCpE,OAAA;UAAOsE,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAEzD,eAAgB;UAAC0D,QAAQ,EAAGvB,CAAC,IAAKlC,kBAAkB,CAACkC,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;UAACG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1G,CAAC,eACNpE,OAAA;QAAAgE,QAAA,gBACEhE,OAAA;UAAAgE,QAAA,EAAO;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3BpE,OAAA;UAAOsE,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAEvD,UAAW;UAACwD,QAAQ,EAAGvB,CAAC,IAAKhC,aAAa,CAACgC,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;UAACG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChG,CAAC,eACNpE,OAAA;QAAAgE,QAAA,gBACEhE,OAAA;UAAAgE,QAAA,EAAO;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1BpE,OAAA;UAAOsE,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAErD,UAAW;UAACsD,QAAQ,EAAGvB,CAAC,IAAK9B,aAAa,CAAC8B,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;UAACG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChG,CAAC,eACNpE,OAAA;QAAAgE,QAAA,gBACEhE,OAAA;UAAAgE,QAAA,EAAO;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpCpE,OAAA;UAAOsE,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAEnD,gBAAiB;UAACoD,QAAQ,EAAGvB,CAAC,IAAK5B,mBAAmB,CAAC4B,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;UAACG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5G,CAAC,eACNpE,OAAA;QAAAgE,QAAA,gBACEhE,OAAA;UAAAgE,QAAA,EAAO;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1BpE,OAAA;UAAUuE,KAAK,EAAEjD,UAAW;UAACkD,QAAQ,EAAGvB,CAAC,IAAK1B,aAAa,CAAC0B,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;UAACG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF,CAAC,eACNpE,OAAA;QAAQsE,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EAGN5C,SAAS,iBACRxB,OAAA;MAAAgE,QAAA,gBACEhE,OAAA;QAAAgE,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBpE,OAAA;QAAAgE,QAAA,EAAMxC;MAAS;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClE,EAAA,CAjJQD,cAAc;EAAA,QACJH,WAAW;AAAA;AAAA6E,EAAA,GADrB1E,cAAc;AAmJvB,eAAeA,cAAc;AAAC,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}