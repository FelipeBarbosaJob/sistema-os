{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\Documents\\\\Projetos\\\\sistema-os\\\\frontend\\\\src\\\\pages\\\\CadastroClientes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport FormularioCliente from '../components/FormularioCliente'; // Componente de formulário reutilizável\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CadastroClientes() {\n  _s();\n  const navigate = useNavigate();\n  const [mensagem, setMensagem] = useState(''); // Estado para exibir mensagens de sucesso/erro\n\n  // Função para lidar com o cadastro do cliente\n  const handleCadastroCliente = async cliente => {\n    try {\n      const response = await fetch('http://localhost:3000/clientes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(cliente)\n      });\n      if (!response.ok) throw new Error('Erro ao cadastrar cliente');\n\n      // Exibe mensagem de sucesso\n      setMensagem('Cliente cadastrado com sucesso!');\n\n      // Redireciona para a lista de clientes após 2 segundos\n      setTimeout(() => {\n        navigate('/clientes');\n      }, 2000);\n    } catch (error) {\n      console.error('Erro:', error);\n      setMensagem('Erro ao cadastrar cliente. Tente novamente.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastro de Cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), mensagem && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(FormularioCliente, {\n      onSubmit: handleCadastroCliente\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/clientes'),\n      children: \"Cancelar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(CadastroClientes, \"wj5clyj2/c8dhs6BZtUtUvI+V3A=\", false, function () {\n  return [useNavigate];\n});\n_c = CadastroClientes;\nexport default CadastroClientes;\nvar _c;\n$RefreshReg$(_c, \"CadastroClientes\");","map":{"version":3,"names":["React","useState","useNavigate","FormularioCliente","jsxDEV","_jsxDEV","CadastroClientes","_s","navigate","mensagem","setMensagem","handleCadastroCliente","cliente","response","fetch","method","headers","body","JSON","stringify","ok","Error","setTimeout","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onClick","_c","$RefreshReg$"],"sources":["C:/Users/felip/Documents/Projetos/sistema-os/frontend/src/pages/CadastroClientes.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport FormularioCliente from '../components/FormularioCliente'; // Componente de formulário reutilizável\r\n\r\nfunction CadastroClientes() {\r\n  const navigate = useNavigate();\r\n  const [mensagem, setMensagem] = useState(''); // Estado para exibir mensagens de sucesso/erro\r\n\r\n  // Função para lidar com o cadastro do cliente\r\n  const handleCadastroCliente = async (cliente) => {\r\n    try {\r\n      const response = await fetch('http://localhost:3000/clientes', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(cliente),\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Erro ao cadastrar cliente');\r\n\r\n      // Exibe mensagem de sucesso\r\n      setMensagem('Cliente cadastrado com sucesso!');\r\n\r\n      // Redireciona para a lista de clientes após 2 segundos\r\n      setTimeout(() => {\r\n        navigate('/clientes');\r\n      }, 2000);\r\n    } catch (error) {\r\n      console.error('Erro:', error);\r\n      setMensagem('Erro ao cadastrar cliente. Tente novamente.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Cadastro de Cliente</h1>\r\n\r\n      {/* Exibe mensagem de sucesso ou erro */}\r\n      {mensagem && <p>{mensagem}</p>}\r\n\r\n      {/* Formulário de cadastro */}\r\n      <FormularioCliente onSubmit={handleCadastroCliente} />\r\n\r\n      {/* Botão para cancelar e voltar para a lista de clientes */}\r\n      <button onClick={() => navigate('/clientes')}>Cancelar</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CadastroClientes;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,iBAAiB,MAAM,iCAAiC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjE,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAMU,qBAAqB,GAAG,MAAOC,OAAO,IAAK;IAC/C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,OAAO;MAC9B,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;;MAE9D;MACAX,WAAW,CAAC,iCAAiC,CAAC;;MAE9C;MACAY,UAAU,CAAC,MAAM;QACfd,QAAQ,CAAC,WAAW,CAAC;MACvB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;MAC7Bb,WAAW,CAAC,6CAA6C,CAAC;IAC5D;EACF,CAAC;EAED,oBACEL,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAG3BpB,QAAQ,iBAAIJ,OAAA;MAAAoB,QAAA,EAAIhB;IAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG9BxB,OAAA,CAACF,iBAAiB;MAAC2B,QAAQ,EAAEnB;IAAsB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGtDxB,OAAA;MAAQ0B,OAAO,EAAEA,CAAA,KAAMvB,QAAQ,CAAC,WAAW,CAAE;MAAAiB,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV;AAACtB,EAAA,CA1CQD,gBAAgB;EAAA,QACNJ,WAAW;AAAA;AAAA8B,EAAA,GADrB1B,gBAAgB;AA4CzB,eAAeA,gBAAgB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}